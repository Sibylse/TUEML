Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/homebrew/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/homebrew/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/homebrew/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/homebrew/Cellar/python@3.9/3.9.13_1/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/homebrew/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.colors import ListedColormap, LinearSegmentedColormap

# Rosenbrock function and gradient
def rosenbrock(theta):
    x, y = theta
    return (1 - x)**2 + 100 * (y - x**2)**2

def rosenbrock_grad(theta):
    x, y = theta
    dx = -2 * (1 - x) - 400 * x * (y - x**2)
    dy = 200 * (y - x**2)
    return np.array([dx, dy])

# gradient descent
def cd(init_theta, steps=5):
    theta = np.array(init_theta, dtype=float)
    trajectory = [theta.copy()]
    i = 0
    
    for _ in range(steps):
        if i==0:
            theta[0]=1
        else:
            theta[1]=theta[0]**2
        trajectory.append(theta.copy())
        i= (i+1)%2
    
    return np.array(trajectory)

# Compute trajectory
trajectory = cd(init_theta=[-1.5, 1.5])

# Prepare grid
x = np.linspace(-2, 2, 400)
y = np.linspace(-1, 3, 400)
X, Y = np.meshgrid(x, y)
Z = (1 - X)**2 + 100 * (Y - X**2)**2

# Compute Z values along trajectory
Z_traj = np.array([rosenbrock(p) for p in trajectory])

# Plotting
fig = plt.figure(figsize=(14, 6))
cm_0 = LinearSegmentedColormap.from_list("mycmap", ["#ffffff","#a0c3ff"])
# 3D surface with trajectory
ax1 = fig.add_subplot(1, 2, 1, projection='3d')
ax1.plot_surface(X, Y, Z, cmap=cm_0, alpha=0.8, edgecolor='none')
ax1.plot(trajectory[:, 0], trajectory[:, 1], Z_traj, color='red', marker='o', markersize=2, label='Momentum trajectory')
ax1.set_title("GD on Rosenbrock Surface")
ax1.set_xlabel("x"); ax1.set_ylabel("y"); ax1.set_zlabel("f(x, y)")

# Contour plot (level sets)
ax2 = fig.add_subplot(1, 2, 2)
ax2.contour(X, Y, Z, levels=np.logspace(-1, 3, 50), cmap=cm_0)
ax2.plot(trajectory[:, 0], trajectory[:, 1], marker='o', markersize=2, color='red', label='Momentum trajectory')
ax2.set_title(f"GD on Rosenbrock Level Sets (step size {lr})")
ax2.set_xlabel("x"); ax2.set_ylabel("y")
ax2.grid(True); ax2.legend()

plt.tight_layout()
plt.show()

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 59>[0;34m()[0m
[1;32m     57[0m ax2[38;5;241m.[39mcontour(X, Y, Z, levels[38;5;241m=[39mnp[38;5;241m.[39mlogspace([38;5;241m-[39m[38;5;241m1[39m, [38;5;241m3[39m, [38;5;241m50[39m), cmap[38;5;241m=[39mcm_0)
[1;32m     58[0m ax2[38;5;241m.[39mplot(trajectory[:, [38;5;241m0[39m], trajectory[:, [38;5;241m1[39m], marker[38;5;241m=[39m[38;5;124m'[39m[38;5;124mo[39m[38;5;124m'[39m, markersize[38;5;241m=[39m[38;5;241m2[39m, color[38;5;241m=[39m[38;5;124m'[39m[38;5;124mred[39m[38;5;124m'[39m, label[38;5;241m=[39m[38;5;124m'[39m[38;5;124mMomentum trajectory[39m[38;5;124m'[39m)
[0;32m---> 59[0m ax2[38;5;241m.[39mset_title([38;5;124mf[39m[38;5;124m"[39m[38;5;124mGD on Rosenbrock Level Sets (step size [39m[38;5;132;01m{[39;00mlr[38;5;132;01m}[39;00m[38;5;124m)[39m[38;5;124m"[39m)
[1;32m     60[0m ax2[38;5;241m.[39mset_xlabel([38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m); ax2[38;5;241m.[39mset_ylabel([38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m)
[1;32m     61[0m ax2[38;5;241m.[39mgrid([38;5;28;01mTrue[39;00m); ax2[38;5;241m.[39mlegend()

[0;31mNameError[0m: name 'lr' is not defined
NameError: name 'lr' is not defined

